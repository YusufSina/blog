I"×<p><em>SelÃ§uk Ermayaâ€™nÄ±n Web API, RESTful Best Practise sunumundan aldÄ±ÄŸÄ±m notlardÄ±r.</em></p>

<p>Zapier, bir mail geldiÄŸinde aksiyon Ã¼retmesini saÄŸlayan bir uygulama.</p>

<h2 id="efektif-uygulama-biÃ§imleri">Efektif Uygulama BiÃ§imleri</h2>

<ul>
  <li><strong>Semantic Naming:</strong> Bir API ucuna  baktÄ±ÄŸÄ±m zaman o ÅŸu iÅŸi yapÄ±yor diyebilmeliyim.</li>
  <li><strong>Reliation Endpoints:</strong>  BazÄ± endpointler iliÅŸkili olmalÄ±, kullanÄ±cÄ±nÄ±n resimleri gibi,</li>
  <li><strong>Common Model:</strong>  Cevap modelinin ortak olmasÄ± gerekliliÄŸi</li>
  <li><strong>Common Security Layer:</strong>  20 API iÃ§in farklÄ± farklÄ± gÃ¼venlik yÃ¶ntemleri uyguluyorsak, onu ortak bir katman haline getirmeliyiz.</li>
  <li><strong>Caching:</strong>  Cacheleniyor olabilmesi gerekiyor, client tarafÄ±nda da sunuc tarafÄ±nda da, Ã§ok kullanÄ±lan API ler iÃ§in</li>
  <li><strong>Seperated Request / DTO model:</strong>  Bir DTOnun request modelinden farklÄ± olmasÄ± gerekiyor</li>
  <li><strong>Versioning:</strong> Versiyonlama gerekiyor, API yi kullanan bir uygulamanÄ±n etkilenmemesi gerekir</li>
  <li><strong>Simplicity:</strong> Basit olmasÄ± gerekiyor</li>
  <li><strong>Less dependency:</strong> Az baÄŸÄ±mlÄ± olmasÄ± gerekiyor</li>
  <li><strong>Validation:</strong>  Validation, ne hatasÄ± oluÅŸtuÄŸunu bildirmesini saÄŸlayacak</li>
</ul>

<h3 id="iÌ‡simlendirme">Ä°simlendirme</h3>

<blockquote>
  <p>HTTP 1.0 da sadece get ve post vardÄ±.</p>

  <p>Post ile hem post hem put yapabilirsin ama anlaÅŸÄ±labilir olmak iÃ§in put kullan.</p>

  <p>PUT da tÃ¼m alanlar gÃ¼ncellenir, PATCH de sadece gÃ¶nderilen alanlar gÃ¼ncellenir.</p>

  <p>/me gayet anlaÅŸÄ±lÄ±r bir endpoint, /users/id/followers da olabilir ama /me daha iyi</p>

</blockquote>

<h3 id="iÌ‡liÅŸkili-api-uÃ§larÄ±">Ä°liÅŸkili API UÃ§larÄ±</h3>

<h3 id="ortak-cevap-modeli">Ortak Cevap Modeli</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"success" : true,
"code" : 200
"message" : "user added"
"internalMessage": "user added with id: 5"
</code></pre></div></div>

<p>Burada internal mesaj developer iÃ§in message display iÃ§in.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"success" : true,
"code" : 200
"message" : "user added"
"internalMessage": "user added with id: 5"
"validations" : [
  "UserName" : "cannot be null",
  "UserName" : "Please enter a value "
]
</code></pre></div></div>

<p>BÃ¼yÃ¼k firmalarda fb, twitter gibi firmalarda API larda modeller genellikle ortaktÄ±r.</p>

<p><mark>Muhakkak ve muhakkak Request modelle DTO model birbirinden farklÄ± olsun.</mark></p>

<h4 id="status-kodlarÄ±">Status KodlarÄ±</h4>

<ul>
  <li>200 Ok demek</li>
  <li>304 no content</li>
  <li>500 internal server, bende bir hata var</li>
  <li>400 ve sonrasÄ± sende bir hata var, 404 ulaÅŸmaya Ã§alÄ±ÅŸtÄ±ÄŸÄ±n uÃ§ bende yok, 401 login olmamÄ±ÅŸsÄ±n/auth token gÃ¶ndermemiÅŸsin,  403 gÃ¶ndermiÅŸ olduÄŸub auth token ile bu iÅŸlemi yapamazsÄ±n.</li>
</ul>

<h3 id="Ã¶nbellekleme">Ã–nbellekleme</h3>

<p>Ä°stenilen veri sÃ¼rekli deÄŸiÅŸmeyen bir veri ise bu veriyi memoryde ya da redis gibi cache ortamlarÄ±nda yada  cassandra ya da vb. ortamlarda tutun. Belirli bir sÃ¼re (1-2 saat) veriyi cachle ve clientada verinin cacheden geldiÄŸini sÃ¶yle, cachein ne zaman yenileneceÄŸini de sÃ¶yle, eÄŸer kullanÄ±cÄ± header ile cacheden istemediÄŸini belirtirse canlÄ± data alÄ±rsÄ±n. Ä°ki tÃ¼rlÃ¼ cache var;</p>

<ul>
  <li>Client Cache</li>
  <li>Server Cache</li>
</ul>

<h3 id="gÃ¼venlik">GÃ¼venlik</h3>

<ul>
  <li>Basic Authenticaton</li>
  <li>Token</li>
  <li>OAuth 2.0 -&gt; token Ã¼retme mekanizmasÄ±</li>
  <li>SSL</li>
</ul>

<h3 id="Ã§oklu-dil-desteÄŸi">Ã‡oklu Dil DesteÄŸi</h3>

<p>Ã‡oklu dil desteÄŸinde birimleri de kÃ¼ltÃ¼re gÃ¶re gÃ¶nderebilirsin.</p>

<h3 id="versiyonlama">Versiyonlama</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/v1/users     1.0.0
/v1.1/users   1.1.0
/v1.1.3/users   1.1.3
/users        latest
</code></pre></div></div>

<p>Semantic versiyonlama da ilk 3 numara Ã¶nemli, ilk rakamÄ±n deÄŸiÅŸmesi breaking changes denilen uygulamanÄ±n Ã§alÄ±ÅŸmasÄ±na engel olabilecek gÃ¼ncellemeler olduÄŸunu gÃ¶sterir. Ä°kinci rakamda gÃ¶rÃ¼len ÅŸeyler Ã§ok kritik olmayan gÃ¼ncellemeler ama yinede bir bakÄ±mlÄ±k gÃ¼ncellemelerdir. Sonunca sayÄ± ise genellikle iyileÅŸtirmeler ve eklemelerdir.</p>

<blockquote>
  <p>Sil baÅŸtan diye bir kitap var (roman olan deÄŸil giriÅŸimcilik kitabÄ±) tavsiye edildi.</p>
</blockquote>

<h2 id="api-gateway">API Gateway</h2>

<p>API gateway, API Ã¶nÃ¼ne koyulan ve proxyleme yapan bir arkadaÅŸÄ±mÄ±z. Ne yapÄ±yor? Bir ÅŸeyi diÄŸer tarafa aktarÄ±r.</p>

<p>Validasyon ile zorunluluklarÄ± bildiririz.</p>

<p>Ã–rnek ;</p>

<ul>
  <li>Header ile token gÃ¶ndermek zorundasÄ±n.</li>
  <li>ContentType gÃ¶ndermek zorundasÄ±n. Ya application/json gÃ¶ndericeksin ya application/xml gÃ¶ndericeksin</li>
  <li>Bodynin sizeÄ± Ã§ok bÃ¼yÃ¼k, sÄ±nÄ±rlayabilirsin.</li>
</ul>

<p>Denilebilir.</p>

<p>BunlarÄ± her API ye yazmamak iÃ§in MiddleWare e yazman gerekir.</p>

<p>Validasyon, loglama gibi ÅŸeyler API Gateway iÃ§erisinde barÄ±nÄ±r.</p>

<p>API Gatewayler;</p>

<ul>
  <li>getkong</li>
  <li>tyk.io</li>
</ul>

<p>YardÄ±mcÄ± AraÃ§lar;</p>

<ul>
  <li>HTTPie</li>
</ul>
:ET